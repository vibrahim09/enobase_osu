{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Maria/Downloads/enobase_osu/formula-engine/src/lib/functions.ts"],"sourcesContent":["import type { NextApiRequest, NextApiResponse } from 'next';\r\n\r\n// Request body interfaces\r\nexport interface AddRequestBody {\r\n  function: 'add';\r\n  num1: number;\r\n  num2: number;\r\n}\r\n\r\nexport interface SubtractRequestBody {\r\n  function: 'subtract';\r\n  num1: number;\r\n  num2: number;\r\n}\r\n\r\nexport interface DivideRequestBody {\r\n  function: 'divide';\r\n  num1: number;\r\n  num2: number;\r\n}\r\n\r\n\r\nexport interface MultiplyRequestBody {\r\n  function: 'multiply';\r\n  num1: number;\r\n  num2: number;\r\n}\r\n\r\n\r\nexport interface FunctionRequestBody {\r\n  function: string;\r\n  [key: string]: any;\r\n}\r\n\r\n// Type of the handler functions\r\ntype FunctionHandler<T> = (reqBody: T) => any;\r\n\r\n// Type Guards for functions\r\nfunction isAddRequestBody(reqBody: FunctionRequestBody): reqBody is AddRequestBody {\r\n  return reqBody.function === 'add' && typeof reqBody.num1 === 'number' && typeof reqBody.num2 === 'number';\r\n}\r\n\r\nfunction isSubtractRequestBody(reqBody: FunctionRequestBody): reqBody is SubtractRequestBody {\r\n  return reqBody.function === 'subtract' && typeof reqBody.num1 === 'number' && typeof reqBody.num2 === 'number';\r\n}\r\nfunction isDivideRequestBody(reqBody: FunctionRequestBody): reqBody is DivideRequestBody {\r\n  return reqBody.function === 'divide' && typeof reqBody.num1 === 'number' && typeof reqBody.num2 === 'number';\r\n}\r\n\r\n\r\nfunction isMultiplyRequestBody(reqBody: FunctionRequestBody): reqBody is MultiplyRequestBody {\r\n  return reqBody.function === 'multiply' && typeof reqBody.num1 === 'number' && typeof reqBody.num2 === 'number';\r\n}\r\n\r\n\r\n// Function implementations\r\nconst add: FunctionHandler<AddRequestBody> = (reqBody) => {\r\n  return reqBody.num1 + reqBody.num2;\r\n}\r\n\r\nconst subtract: FunctionHandler<SubtractRequestBody> = (reqBody) => {\r\n  return reqBody.num1 - reqBody.num2;\r\n}\r\nconst divide: FunctionHandler<DivideRequestBody> = (reqBody) => {\r\n  return reqBody.num1 / reqBody.num2;\r\n}\r\nconst multiply: FunctionHandler<MultiplyRequestBody> = (reqBody) => {\r\n  return reqBody.num1 * reqBody.num2;\r\n}\r\n// Function map\r\nconst functionMap: Record<string, FunctionHandler<any>> = {\r\n  add,\r\n  subtract,\r\n  divide,\r\n  multiply,\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// Export the dispatch function\r\nexport const dispatch = (reqBody: FunctionRequestBody) => {\r\n  const handler = functionMap[reqBody.function];\r\n  if (!handler) {\r\n    return undefined;\r\n  }\r\n\r\n  // Validate input structure with type guards\r\n  if (isAddRequestBody(reqBody)) {\r\n    return handler(reqBody);\r\n  } else if (isSubtractRequestBody(reqBody)) {\r\n    return handler(reqBody);\r\n  }\r\n  else if (isDivideRequestBody(reqBody)) {\r\n    return handler(reqBody);\r\n  }\r\n  else if (isMultiplyRequestBody(reqBody)) {\r\n    return handler(reqBody);\r\n  }\r\n\r\n  return undefined;\r\n};\r\n\r\nexport default (req: NextApiRequest, res: NextApiResponse) => {\r\n  const reqBody: FunctionRequestBody = req.body;\r\n  const result = dispatch(reqBody);\r\n  res.status(200).json({ result });\r\n};\r\n"],"names":[],"mappings":";;;;AAqCA,4BAA4B;AAC5B,SAAS,iBAAiB,OAA4B;IACpD,OAAO,QAAQ,QAAQ,KAAK,SAAS,OAAO,QAAQ,IAAI,KAAK,YAAY,OAAO,QAAQ,IAAI,KAAK;AACnG;AAEA,SAAS,sBAAsB,OAA4B;IACzD,OAAO,QAAQ,QAAQ,KAAK,cAAc,OAAO,QAAQ,IAAI,KAAK,YAAY,OAAO,QAAQ,IAAI,KAAK;AACxG;AACA,SAAS,oBAAoB,OAA4B;IACvD,OAAO,QAAQ,QAAQ,KAAK,YAAY,OAAO,QAAQ,IAAI,KAAK,YAAY,OAAO,QAAQ,IAAI,KAAK;AACtG;AAGA,SAAS,sBAAsB,OAA4B;IACzD,OAAO,QAAQ,QAAQ,KAAK,cAAc,OAAO,QAAQ,IAAI,KAAK,YAAY,OAAO,QAAQ,IAAI,KAAK;AACxG;AAGA,2BAA2B;AAC3B,MAAM,MAAuC,CAAC;IAC5C,OAAO,QAAQ,IAAI,GAAG,QAAQ,IAAI;AACpC;AAEA,MAAM,WAAiD,CAAC;IACtD,OAAO,QAAQ,IAAI,GAAG,QAAQ,IAAI;AACpC;AACA,MAAM,SAA6C,CAAC;IAClD,OAAO,QAAQ,IAAI,GAAG,QAAQ,IAAI;AACpC;AACA,MAAM,WAAiD,CAAC;IACtD,OAAO,QAAQ,IAAI,GAAG,QAAQ,IAAI;AACpC;AACA,eAAe;AACf,MAAM,cAAoD;IACxD;IACA;IACA;IACA;AAEF;AAOO,MAAM,WAAW,CAAC;IACvB,MAAM,UAAU,WAAW,CAAC,QAAQ,QAAQ,CAAC;IAC7C,IAAI,CAAC,SAAS;QACZ,OAAO;IACT;IAEA,4CAA4C;IAC5C,IAAI,iBAAiB,UAAU;QAC7B,OAAO,QAAQ;IACjB,OAAO,IAAI,sBAAsB,UAAU;QACzC,OAAO,QAAQ;IACjB,OACK,IAAI,oBAAoB,UAAU;QACrC,OAAO,QAAQ;IACjB,OACK,IAAI,sBAAsB,UAAU;QACvC,OAAO,QAAQ;IACjB;IAEA,OAAO;AACT;uCAEe,CAAC,KAAqB;IACnC,MAAM,UAA+B,IAAI,IAAI;IAC7C,MAAM,SAAS,SAAS;IACxB,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;QAAE;IAAO;AAChC"}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Maria/Downloads/enobase_osu/formula-engine/src/app/api/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport { dispatch } from '@/lib/functions'\r\nimport { FunctionRequestBody } from '@/lib/functions'\r\n\r\nexport async function POST(request: Request) {\r\n  try {\r\n    const body = await request.json() as FunctionRequestBody\r\n    console.log('Received request body:', body)\r\n\r\n    const result = dispatch(body)\r\n    console.log('Calculation result:', result)\r\n    \r\n    if (result === undefined) {\r\n      console.log('Invalid request - result undefined')\r\n      return NextResponse.json(\r\n        { message: 'Invalid request' },\r\n        { status: 400 }\r\n      )\r\n    }\r\n\r\n    return NextResponse.json({ result })\r\n  } catch (error) {\r\n    console.error('API error:', error)\r\n    return NextResponse.json(\r\n      { message: 'Internal server error' },\r\n      { status: 500 }\r\n    )\r\n  }\r\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAGO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,QAAQ,GAAG,CAAC,0BAA0B;QAEtC,MAAM,SAAS,CAAA,GAAA,yHAAA,CAAA,WAAQ,AAAD,EAAE;QACxB,QAAQ,GAAG,CAAC,uBAAuB;QAEnC,IAAI,WAAW,WAAW;YACxB,QAAQ,GAAG,CAAC;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAAkB,GAC7B;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAO;IACpC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,cAAc;QAC5B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAAwB,GACnC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}